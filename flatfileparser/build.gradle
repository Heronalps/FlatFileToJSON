/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'singh' at '10/5/15 11:23 AM' with Gradle 2.3
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.3/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'pmd'
apply plugin: 'findbugs'

pmd {
    consoleOutput = false
    ignoreFailures = true
    ruleSets = [ "java-basic", "java-strings", "java-braces" ]
}

findbugs {
    toolVersion = "3.0.0"
    ignoreFailures = true
    effort = "max"
    reportLevel = "high"
    visitors = ["FindSqlInjection", "SwitchFallthrough"]
    omitVisitors = ["FindNonShortCircuit"]
    includeFilter = file("$rootProject.projectDir/config/findbugs/exin_findbugs_ruleset.xml")
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

jar {
    from {
        (configurations.runtime).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes("Main-Class": "com.expicient.integration.Processor" )
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.apache.commons:commons-csv:1.1'
    compile 'com.google.code.gson:gson:1.7.2'
    compile 'args4j:args4j-site:2.0.16'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
